<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VS2017操做sql server数据库</title>
      <link href="/posts/6bdf8b67.html"/>
      <url>/posts/6bdf8b67.html</url>
      
        <content type="html"><![CDATA[<img src="https://s2.ax1x.com/2020/03/08/3xkeun.png"><a id="more"></a><p><a href="https://xwmrcj.com/posts/6bdf8b67.html" class="LinkCard">VS2017操做sql server数据库</a></p><p>新的学期已经到来！作业又开始蹭蹭蹭的往上涨😭。对于一个摸鱼怪来说，简直是要命啊<span style="color: #0948DC">(⊙﹏⊙)</span>！特别是课还没上，作业先到。没办法了，对于一个刚接触数据库的小白也只好踏上完成作业的不归路了<span style="color: #C350EC">＞﹏＜！</span></p><p>好了，话不多说，希望摸鱼怪总结的对大家有丢丢帮助吧<span style="color: #C350EC">(<em>^_^</em>)</span>！</p><hr><ol><li><h5 id="安装sql-server数据库"><a href="#安装sql-server数据库" class="headerlink" title="安装sql server数据库"></a>安装sql server数据库</h5><p>摸鱼怪在这里就不总结了，相信大家都会，实在不行就去问问度娘吧！</p><div class="note warning">            <p>摸鱼怪在这里提醒大家，如果<u>版本太新可能会出现不兼容问题</u>，最开始我用的是sql server2017，但版本太新VS2017无法与该数据库连接，没办法只好卸了再重装一个sql server2014。</p>          </div></li><li><h5 id="新建一个数据库"><a href="#新建一个数据库" class="headerlink" title="新建一个数据库"></a>新建一个数据库</h5><p>打开sql server，点击新建查询，复制执行下面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> haha</span><br><span class="line"><span class="keyword">on</span> primary(</span><br><span class="line"><span class="keyword">name</span> = <span class="string">'haha'</span>,</span><br><span class="line">filename = <span class="string">'D:\test\haha.mdf'</span>,</span><br><span class="line"><span class="keyword">size</span> = <span class="number">10</span>MB,</span><br><span class="line"><span class="keyword">maxsize</span> = <span class="number">50</span>MB,</span><br><span class="line">filegrowth = <span class="number">5</span>MB</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">log</span> <span class="keyword">on</span>(</span><br><span class="line"><span class="keyword">name</span> = <span class="string">'haha_log'</span>,</span><br><span class="line">filename = <span class="string">'D:\test\haha_log.ldf'</span>,</span><br><span class="line"><span class="keyword">size</span> = <span class="number">10</span>MB,</span><br><span class="line"><span class="keyword">maxsize</span> = <span class="number">50</span>MB,</span><br><span class="line">filegrowth = <span class="number">5</span>MB</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><div class="note info">            <p><u>sql server不会帮你新建一个文件夹</u>，你需要去D盘新建一个test文件夹，除非test文件夹已建，或者直接修改路径，这都看你的心情<span style="color: #7550EC">(<em>^_^</em>)</span></p>          </div></li><li><h5 id="新建一个表，复制执行下面代码："><a href="#新建一个表，复制执行下面代码：" class="headerlink" title="新建一个表，复制执行下面代码："></a>新建一个表，复制执行下面代码：</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> haha</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line"><span class="keyword">ID</span> <span class="built_in">int</span> primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">age <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><p>然后刷新数据库，就会发现多了一个test数据库，里面也多了一张student表。</p></li><li><h5 id="为student表插入数据，复制执行下面代码："><a href="#为student表插入数据，复制执行下面代码：" class="headerlink" title="为student表插入数据，复制执行下面代码："></a>为student表插入数据，复制执行下面代码：</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student</span><br><span class="line"><span class="keyword">values</span>(<span class="number">111</span>,<span class="string">'张三'</span>,<span class="number">18</span>),(<span class="number">222</span>,<span class="string">'李四'</span>,<span class="number">18</span>),(<span class="number">333</span>,<span class="string">'老王'</span>,<span class="number">18</span>);</span><br></pre></td></tr></table></figure></div></li><li><h5 id="控制面板配置ODBC数据源"><a href="#控制面板配置ODBC数据源" class="headerlink" title="控制面板配置ODBC数据源"></a>控制面板配置ODBC数据源</h5><p>ODBC就是开放数据库互连，它提供了一种标准的API方法来访问数据库管理系统(DBMS)。具体配置方法大家可以参考这篇<a href="https://blog.csdn.net/qq_39312317/article/details/84944614?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">博文</a>。</p><div class="note info">            <p>大家如果是直接用”SQL Server身份验证“进行登录的，可以不必像博文那样新建一个用户。同时，数据源名称须和你的数据库名称一致，因为测试，这里我们就把名称改为<u>haha</u>。</p>          </div><div class="note warning">            <p><u>在选择连接哪一个SQL Server?</u>如果大家选(local)测试报错了，可以打开<span style="background: #D3E0EA">“SQL Server Managment Studio”</span>在登陆界面将自己的服务器名称粘贴赋值过去试一试，摸鱼怪当初就因为服务器名称没填对掉进坑里，少了”\SQLEXPRESS“<span style="color: #EC8250">≡(▔﹏▔)≡</span></p>          </div><p>然后，在选择数据库这一步，点击<span style="background: #D3E0EA">”更改默认的数据库“</span>，选为<u>haha</u>。</p><p>测试成功后，点击确定，你就会发现”用户 DSN“里多了haha，因为懒惰，这里摸鱼怪就不贴上图片了，希望大家见谅了。其他的步骤都与那片博文一致，只需注意一下上面小小的改动<span style="color: #EC50BA">O(∩_∩)O</span></p></li><li><h5 id="VS2017操作sql-server数据库"><a href="#VS2017操作sql-server数据库" class="headerlink" title="VS2017操作sql server数据库"></a>VS2017操作sql server数据库</h5><ul><li><p>首先打开VS2017，新建一个”Windows 控制台应用程序“，位置可以修改为”D:\test\“。</p></li><li><p>在ConsoleApplication1源文件，<u>删除原来的main函数</u>，添加如下代码</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sql.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sqlext.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sqltypes.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loadDatabase</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SQLRETURN ret;</span><br><span class="line">SQLHENV henv;</span><br><span class="line">SQLHDBC hdbc;</span><br><span class="line">SQLHSTMT hstmt;</span><br><span class="line"></span><br><span class="line">ret = SQLAllocHandle(SQL_HANDLE_ENV, <span class="literal">NULL</span>, &amp;henv);</span><br><span class="line">ret = SQLSetEnvAttr(henv, SQL_ATTR_ODBC_VERSION, (SQLPOINTER)SQL_OV_ODBC3, SQL_IS_INTEGER);</span><br><span class="line">ret = SQLAllocHandle(SQL_HANDLE_DBC, henv, &amp;hdbc);</span><br><span class="line">ret = SQLConnect(hdbc, (SQLCHAR*)<span class="string">"数据库名称"</span>, SQL_NTS, (SQLCHAR*)<span class="string">"用户名"</span>, SQL_NTS, (SQLCHAR*)<span class="string">"密码"</span>, SQL_NTS);</span><br><span class="line"><span class="keyword">if</span> (ret == SQL_SUCCESS || ret == SQL_SUCCESS_WITH_INFO)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"数据库连接成功！\n"</span>;</span><br><span class="line">ret = SQLAllocHandle(SQL_HANDLE_STMT, hdbc, &amp;hstmt);<span class="comment">//申请sql语句句柄</span></span><br><span class="line">SQLCHAR sql[] = <span class="string">"select * from student"</span>;</span><br><span class="line">ret = SQLExecDirect(hstmt, sql, SQL_NTS);<span class="comment">//直接执行sql语句</span></span><br><span class="line"><span class="keyword">if</span> (ret == SQL_SUCCESS || ret == SQL_SUCCESS_WITH_INFO)</span><br><span class="line">&#123;</span><br><span class="line">SQLINTEGER ID,age;</span><br><span class="line">SQLCHAR name[<span class="number">20</span>];</span><br><span class="line">SQLINTEGER len_ID, len_name, len_age;</span><br><span class="line"><span class="keyword">while</span> (SQLFetch(hstmt) != SQL_NO_DATA)</span><br><span class="line">&#123;</span><br><span class="line">SQLGetData(hstmt, <span class="number">1</span>, SQL_C_ULONG, &amp;ID, <span class="number">0</span>, &amp;len_ID);</span><br><span class="line">SQLGetData(hstmt, <span class="number">2</span>, SQL_C_CHAR, name, <span class="number">10</span>, &amp;len_name);</span><br><span class="line">SQLGetData(hstmt, <span class="number">3</span>, SQL_C_ULONG, &amp;age, <span class="number">0</span>, &amp;len_age);</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; ID &lt;&lt; <span class="string">"    "</span> &lt;&lt; name &lt;&lt; <span class="string">"    "</span> &lt;&lt; age &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"查询失败！\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line">SQLFreeHandle(SQL_HANDLE_STMT, hstmt);<span class="comment">//释放语句句柄</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"连接失败！\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line">SQLFreeHandle(SQL_HANDLE_DBC, hdbc);<span class="comment">//释放句柄</span></span><br><span class="line">SQLFreeHandle(SQL_HANDLE_ENV, henv);<span class="comment">//释放环境句柄     </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">loadDatabase();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="note info">            <p>大家在这里注意一下，上面有几处需要你自己修改，<span style="background: #D3E0EA">”数据库名称“</span>也就是当前我们连接的数据库<u>”haha“</u>，<span style="background: #D3E0EA">”用户名“</span>和<span style="background: #D3E0EA">”密码“</span>是你进行<u>SQL Server身份验证的登录名和密码</u>，大家注意修改哦<span style="color: #088741">ఠൠఠ </span></p>          </div></li><li><p>做完以上工作后，然后执行代码，就会发现，问题就找上门来了！<span style="color: #0CB1B3">(っ °Д °;)っ</span>，主要问题描述为：<span style="background: #D3E0EA">“SQLCHAR *” 类型的实参与 “SQLWCHAR *” 类型的形参不兼容</span>。补救方法就是”项目 —&gt;ConsoleApplication1属性—&gt;配置属性—&gt;常规—&gt;项目默认值—&gt;字符集—&gt;改为使用多字节字符集“。然后再次执行就成功了！</p></li></ul></li></ol><hr><p>好了，摸鱼怪能力有限，目前也只能总结到这了<span style="color: #09CDDC">&lt;(＿　＿)&gt;</span>，希望对大家有所帮助吧！大家也可以了解<a href="https://docs.microsoft.com/en-us/sql/odbc/reference/syntax/odbc-api-reference?view=sql-server-ver15" target="_blank" rel="noopener">ODBC API</a>的更多操作！</p><center style="color: #08A3F9; font-size: 24px">摸鱼永无止境，大家(ง •_•)ง！！</center>]]></content>
      
      
      <categories>
          
          <category> VS2017 </category>
          
          <category> sql server </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VS2017 </tag>
            
            <tag> sql server </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo侧栏添加霓虹灯时钟</title>
      <link href="/posts/389486c1.html"/>
      <url>/posts/389486c1.html</url>
      
        <content type="html"><![CDATA[<img src="https://s2.ax1x.com/2020/03/07/3XPdeS.png"><a id="more"></a><p><a href="https://xwmrcj.com/posts/389486c1.html" class="LinkCard">hexo侧栏添加霓虹灯时钟</a></p><p>摸鱼怪今天就来总结一下如何在hexo侧栏添加霓虹灯时钟，我选用的是Gemini主题，添加后的效果如同本博客的主页侧栏。该时钟是由js获取本地时间信息，svg实现动态霓虹灯文字时钟特效。演示效果查看：<a href="https://www.17sucai.com/pins/demo-show?id=36311" target="_blank" rel="noopener">┏ (゜ω゜)=☞</a>。</p><ol><li><p>在/themes/next/layout/_custom/ 目录下，打开sidebar.swig文件，添加如下内容：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">svg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">id</span>=<span class="string">"time"</span> <span class="attr">text-anchor</span>=<span class="string">"middle"</span> <span class="attr">x</span>=<span class="string">"36%"</span> <span class="attr">y</span>=<span class="string">"80%"</span> <span class="attr">class</span>=<span class="string">"words words-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">id</span>=<span class="string">"time"</span> <span class="attr">text-anchor</span>=<span class="string">"middle"</span> <span class="attr">x</span>=<span class="string">"36%"</span> <span class="attr">y</span>=<span class="string">"80%"</span> <span class="attr">class</span>=<span class="string">"words words-2"</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">id</span>=<span class="string">"time"</span> <span class="attr">text-anchor</span>=<span class="string">"middle"</span> <span class="attr">x</span>=<span class="string">"36%"</span> <span class="attr">y</span>=<span class="string">"80%"</span> <span class="attr">class</span>=<span class="string">"words words-3"</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">id</span>=<span class="string">"time"</span> <span class="attr">text-anchor</span>=<span class="string">"middle"</span> <span class="attr">x</span>=<span class="string">"36%"</span> <span class="attr">y</span>=<span class="string">"80%"</span> <span class="attr">class</span>=<span class="string">"words words-4"</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">showtime</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> noatime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> h = noatime.getHours(),</span></span><br><span class="line">        m = noatime.getMinutes(),</span><br><span class="line">        s = noatime.getSeconds();</span><br><span class="line">    h=checktime(h);</span><br><span class="line">    m=checktime(m);</span><br><span class="line">    s=checktime(s);</span><br><span class="line"><span class="actionscript">  <span class="keyword">return</span> h+<span class="string">":"</span>+m+<span class="string">":"</span>+s;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">checktime</span><span class="params">(x)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">if</span>(x&lt;<span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="actionscript">    x=<span class="string">"0"</span>+x;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="actionscript">  <span class="keyword">return</span> x;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> div1=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"text"</span>);</span></span><br><span class="line"><span class="actionscript">setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> div1)&#123;</span></span><br><span class="line">      div1[i].innerHTML=showtime();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,1000);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div></li><li><p>/themes/next/source/css/_custom/目录下,打开custom.styl文件，添加如下内容：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.words</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">    <span class="attribute">fill</span>: none;</span><br><span class="line">    <span class="attribute">stroke-width</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">stroke-dasharray</span>: <span class="number">35</span>,<span class="number">125</span>;</span><br><span class="line">    <span class="attribute">animation-name</span>: drawing;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">6s</span>;</span><br><span class="line">    <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: linear;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.words-1</span>&#123;</span><br><span class="line">    <span class="attribute">stroke</span>: deepskyblue;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span> deepskyblue;</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">1.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.words-2</span>&#123;</span><br><span class="line">    <span class="attribute">stroke</span>: lightseagreen;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span> lightseagreen;</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.words-3</span>&#123;</span><br><span class="line">    <span class="attribute">stroke</span>: orange;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span> orange;</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">4.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.words-4</span>&#123;</span><br><span class="line">    <span class="attribute">stroke</span>: purple;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span> purple;</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">6s</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> drawing &#123;</span><br><span class="line">    100%&#123;</span><br><span class="line">        <span class="attribute">stroke-dashoffset</span>: -<span class="number">160</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>然后大家可以通过<kbd style="font-size: 16px;">hexo s</kbd>命令本地运行一下查看一下效果了。目前，好像next7.2版本之后就移除了_custom文件，大家可以去我的另一篇博客对NexT版本进行修改：</p><p><a href="https://xwmrcj.com/posts/19048.html" class="LinkCard">Hexo博客搭建踩过的坑</a></p></li></ol><center style="color: #08A3F9; font-size: 24px">摸鱼永无止境，大家(ง •_•)ง！！</center>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的一些常用命令</title>
      <link href="/posts/21579.html"/>
      <url>/posts/21579.html</url>
      
        <content type="html"><![CDATA[<img src="https://s2.ax1x.com/2020/03/06/3LxdB9.png"><a id="more"></a><p>摸鱼怪最近学习了一下git的用法，对用git管理GitHub仓库的一些常用命令进行一下总结，希望对大家有所帮助！</p><p><a href="https://xwmrcj.com/posts/21579.html" class="LinkCard">git的一些常用命令</a></p><h4 id="用户设置"><a href="#用户设置" class="headerlink" title="用户设置"></a>用户设置</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"your name"</span></span><br><span class="line">git config --global user.email <span class="string">"your email"</span></span><br></pre></td></tr></table></figure></div><p>这两行命令分别是设置<u>全局用户名</u>和<u>全局Email地址</u>，如果要<u>设置当前用户名和地址</u>去掉–global就行了，如果要<u>查看全局用户名或Email地址</u>，去掉引号部分就行；如果要<u>查看当前用户名或Email地址</u>，去掉引号部分和–global。</p><hr><h4 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h4><h6 id="关联一个远程仓库命令："><a href="#关联一个远程仓库命令：" class="headerlink" title="关联一个远程仓库命令："></a>关联一个远程仓库命令：</h6><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:name1/name2.git</span><br></pre></td></tr></table></figure></div><p>name1换成你的GitHub账号，name2换成你的仓库名。然后可以通过命令：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></div><p>把本地库的所有内容都推送到远程库上，由于第一次推送远程库是空的，加上了-u，这样可以把本地master分支和远程的master分支关联起来，以后可以简化推送命名：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></div><h6 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h6><p>通过git协议克隆：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:name1/name2.git</span><br></pre></td></tr></table></figure></div><p>name1换成你的GitHub账号，name2换成你的仓库名。</p><p>通过https协议克隆：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/xwmrcj/html-svg.git</span><br></pre></td></tr></table></figure></div><p>克隆地址需要换成你自己的。</p><hr><h6 id="添加文件到Git仓库"><a href="#添加文件到Git仓库" class="headerlink" title="添加文件到Git仓库"></a>添加文件到Git仓库</h6><p>第一步：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure></div><p>添加所有文件，也可以把“.”换成指定的文件名。</p><p>第二步：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"content"</span></span><br></pre></td></tr></table></figure></div><p>content是本次提交的说明。同时，通过使用<span style="background: #D3E0EA">git status</span>命令可以随时掌握工作区的状态。如果有文件被修改，可以通过<span style="background: #D3E0EA">git diff</span>查看被修改文件的内容。</p><p>git的一些常用命令，摸鱼怪就先总就到这里。如果大家对Git感兴趣，可以去<span style="color: #ebc334">┏ (゜ω゜)=☞</span><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰大神的官方网站</a>上学习。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建踩过的坑</title>
      <link href="/posts/19048.html"/>
      <url>/posts/19048.html</url>
      
        <content type="html"><![CDATA[<img src="https://s2.ax1x.com/2020/03/06/3LxfHA.png"><a id="more"></a><p><a href="https://xwmrcj.com/posts/19048.html" class="LinkCard">Hexo博客搭建踩过的坑</a></p><p>摸鱼怪今天就总结一下以前搭建博客踩过的坑，希望对大家有所帮助！</p><p>hexo本地测试输入<span style="background: #D3E0EA">hexo s</span>，通常它的默认地址是<span style="background: #D3E0EA">localhost:4000</span>，默认的是本地4000端口。可能有些计算机会出现<u>无法访问此页面</u>，可能原因是当前端口被其他应用占用了。此时大家可以换一个端口：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p 5000</span><br></pre></td></tr></table></figure></div><p>数字根据大家的喜好，如何又出现端口被占用情况，可以再换一个端口号试试。同时大家也可以释放掉当前被占用的端口，具体做法可参考<a href="https://jingyan.baidu.com/article/3c48dd34491d47e10be358b8.html" target="_blank" rel="noopener">此链接</a>，但小编不建议这么做，除非你清楚占用该端口的应用没有用。</p><hr><p>记得摸鱼怪当初搭建博客时，在NexT主题版本上踩了一很久的坑，新版的很多配置都进行了修改。大家可以去<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a>的GitHub上选取自己喜欢的版本，下载压缩包，解压到<u>站点</u>的<span style="background: #D3E0EA">themes</span>文件里面，然后打开<u>站点</u>配置文件<span style="background: #D3E0EA">_config.yml</span>搜索<u>theme</u>，将其值改为当前解压的NexT版本的文件名。NexT主题的配置网上有很多教程，希望大家能搭建出自己心仪的博客！</p><p><span style="color: #08A3F9">(ง •_•)ง    (ง •_•)ง</span></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
