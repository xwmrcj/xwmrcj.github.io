<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git的一些常用命令</title>
      <link href="/posts/21579.html"/>
      <url>/posts/21579.html</url>
      
        <content type="html"><![CDATA[<p>小编最近学习了一下git的用法，对用git管理GitHub仓库的一些常用命令进行一下总结，希望对大家有所帮助！</p><p><a href="https://xwmrcj.github.io" class="LinkCard" target="_blank" rel="noopener">Hexo博客搭建踩过的坑</a></p><a id="more"></a><h4 id="用户设置"><a href="#用户设置" class="headerlink" title="用户设置"></a>用户设置</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"your name"</span></span><br><span class="line">git config --global user.email <span class="string">"your email"</span></span><br></pre></td></tr></table></figure></div><p>这两行命令分别是设置<u>全局用户名</u>和<u>全局Email地址</u>，如果要<u>设置当前用户名和地址</u>去掉–global就行了，如果要<u>查看全局用户名或Email地址</u>，去掉引号部分就行；如果要<u>查看当前用户名或Email地址</u>，去掉引号部分和–global。</p><hr><h4 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h4><h6 id="关联一个远程仓库命令："><a href="#关联一个远程仓库命令：" class="headerlink" title="关联一个远程仓库命令："></a>关联一个远程仓库命令：</h6><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:name1/name2.git</span><br></pre></td></tr></table></figure></div><p>name1换成你的GitHub账号，name2换成你的仓库名。然后可以通过命令：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></div><p>把本地库的所有内容都推送到远程库上，由于第一次推送远程库是空的，加上了-u，这样可以把本地master分支和远程的master分支关联起来，以后可以简化推送命名：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></div><h6 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h6><p>通过git协议克隆：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:name1/name2.git</span><br></pre></td></tr></table></figure></div><p>name1换成你的GitHub账号，name2换成你的仓库名。</p><p>通过https协议克隆：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/xwmrcj/html-svg.git</span><br></pre></td></tr></table></figure></div><p>克隆地址需要换成你自己的。</p><hr><h6 id="添加文件到Git仓库"><a href="#添加文件到Git仓库" class="headerlink" title="添加文件到Git仓库"></a>添加文件到Git仓库</h6><p>第一步：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure></div><p>添加所有文件，也可以把“.”换成指定的文件名。</p><p>第二步：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"content"</span></span><br></pre></td></tr></table></figure></div><p>content是本次提交的说明。同时，通过使用<span style="background: #D3E0EA">git status</span>命令可以随时掌握工作区的状态。如果有文件被修改，可以通过<span style="background: #D3E0EA">git diff</span>查看被修改文件的内容。</p><p>git的一些常用命令，小编就先总就到这里。如果大家对Git感兴趣，可以去<span style="color: #ebc334">┏ (゜ω゜)=☞</span><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰大神的官方网站</a>上学习。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建踩过的坑</title>
      <link href="/posts/19048.html"/>
      <url>/posts/19048.html</url>
      
        <content type="html"><![CDATA[<p>小编今天就总结一下以前搭建博客踩过的坑，希望对大家有所帮助！</p><p><a href="https://xwmrcj.github.io" class="LinkCard" target="_blank" rel="noopener">Hexo博客搭建踩过的坑</a></p><p>hexo本地测试输入<span style="background: #D3E0EA">hexo s</span>，通常它的默认地址是<span style="background: #D3E0EA">localhost:4000</span>，默认的是本地4000端口。可能有些计算机会出现<u>无法访问此页面</u>，可能原因是当前端口被其他应用占用了。此时大家可以换一个端口：</p><a id="more"></a><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p 5000</span><br></pre></td></tr></table></figure></div><p>数字根据大家的喜好，如何又出现端口被占用情况，可以再换一个端口号试试。同时大家也可以释放掉当前被占用的端口，具体做法可参考<a href="https://jingyan.baidu.com/article/3c48dd34491d47e10be358b8.html" target="_blank" rel="noopener">此链接</a>，但小编不建议这么做，除非你清楚占用该端口的应用没有用。</p><hr><p>记得小编当初搭建博客时，在NexT主题版本上踩了一很久的坑，新版的很多配置都进行了修改。大家可以去<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a>的GitHub上选取自己喜欢的版本，下载压缩包，解压到<u>站点</u>的<span style="background: #D3E0EA">themes</span>文件里面，然后打开<u>站点</u>配置文件<span style="background: #D3E0EA">_config.yml</span>搜索<u>theme</u>，将其值改为当前解压的NexT版本的文件名。NexT主题的配置网上有很多教程，希望大家能搭建出自己心仪的博客！</p><p><span style="color: #08A3F9">(ง •_•)ง    (ง •_•)ง</span></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
